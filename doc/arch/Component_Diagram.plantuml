@startuml Component_Diagram
!include ../c4/C4_Component.puml
LAYOUT_LEFT_RIGHT()

Boundary(moduleInit, "__init__") {
  Component(gridUvPackOperator, "GridUVPackOperator", "Operator")
}

Boundary(moduleContinuous, "continuous") {
  Component(faceUvs, "FaceUVs", "Dict[int, Vector]")
  Component(islandUvs, "IslandUVs", "Dickt[int, FaceUVs]")
  Component(island, "Island", "Data Class")
  Component(triangle2d, "Triangle2D", "Class")

  Rel(island, faceUvs, " ")
  Rel(island, islandUvs, " ")
  Rel(island, triangle2d, " ")

  Rel(islandUvs, faceUvs, " ")
}

Boundary(moduleData, "packing") {
  Component(collisionResult, "CollisionResult", "Enum", "NO | YES | OUT_OF_BOUNDS")
  Component(gridPacker, "GridPacker", "Class")
  Component(islandPlacement, "IslandPlacement", "Data Class")

  Rel(gridPacker, collisionResult, " ")
  Rel(gridPacker, islandPlacement, " ")
}

Boundary(moduleDiscrete, "discrete") {
  Component(cellCoord, "CellCoord", "Class")
  Component(grid, "Grid", "Class")

  Rel(grid, cellCoord, " ")
}

Rel(gridUvPackOperator, gridPacker, " ")
Rel(gridUvPackOperator, island, " ")

Rel(gridPacker, cellCoord, " ")
Rel(gridPacker, grid, " ")
Rel(gridPacker, island, " ")

Rel(island, cellCoord, " ")
Rel(island, grid, " ")

Rel(islandPlacement, island, " ")
Rel(islandPlacement, cellCoord, " ")
@enduml
